<style lang="less">
page{
 font-size: 16px;
}
.topic{
  display: flex;
  justify-content:flex-start;
  align-items: flex-start;     /* 垂直居中 */
  width: 100%;
  height:auto;
  padding:10px 0;
  border-bottom: 1px solid #f1f1f1;
  position: relative;
}
.user_avatar{
  width:55px;
  height:55px;
  margin:5px;
  border:1px solid #f1f1f1;
  padding:5px;
  border-radius:5px;
}
.reply-cout{
  display: flex;
  margin-right: 5px;
  position: absolute;
  right: 0px;
}
.topic-box{
  display: flex;
  flex-direction: column;
  // align-items: flex-start;
  width: calc(100% - 115px);
  word-wrap:break-word;
  margin-top:10px;
}
image { width: 100%; height: 100%;}
.topic-box_top{


  .topic-box__title{

  }
}
.topic-info{
  display:flex;
  flex-direction:row;
  font-size:13px;
  color:#bfbfbf;
  flex-wrap:wrap;
  position:relative;
  bottom:-5px;
  .box__info__meta{

  }
}
.weui-loadmore_line {
  border-top:1px solid #E5E5E5;
  margin-top:2.4em;
}
.weui-loadmore {
  width:65%;
  margin:1.5em auto;
  line-height:1.6em;
  font-size:14px;
  text-align:center;
}
.weui-loadmore__tips_in-line {
  position:relative;
  top:-0.9em;
  padding:0 0.55em;
  background-color:#FFFFFF;
  color:#999999;
}
.weui-loadmore__tips {
  display:inline-block;
  vertical-align:middle;
}
.create-reply {
  width: 40px;
  height: 40px;
  position: fixed;
  bottom: 30px;
  right: 30px;
  z-index: 999;
}

</style>
<template>
<view>
  <van-notify id="van-notify" />
  <van-tabs animated swipeable sticky scroll-top="{{ scrollTop }}" active="{{ active }}" swipe-threshold="{{swipe_threshold}}" bind:change="onChange" bind:scroll='onPageScroll'>
    <repeat for="{{ categories }}" key="id" index="index" item="category">
      <van-tab title="{{category.name}}" >
        <repeat for="{{ topic}}" key="id" index="index" item="topic">
          <navigator url="/pages/topics/show?id={{ topic.id }}" class="media-box media-box_appmsg" hover-class="cell_active">
            <view class='topic'>
              <view class="user_avatar">
                <image class="media-box__thumb" src="{{topic.user.avatar}}" />
              </view>
              <view class="topic-box">
                <view class="topic-box_top">
                  {{topic.title}}
                </view>
                <view class="topic-info">
                  <view class="box__info__meta">{{topic.category.name}} • </view>
                  <view class="box__info__meta">{{topic.user.name}} • </view>
                  <view class="box__info__meta">{{topic.updated_at}}</view>
                </view>
              </view>
              <view class="reply-cout">
                <van-tag plain round mark color="#b8b8b8"><van-icon name="chat-o"/>{{topic.reply_count}}</van-tag>
              </view>
            </view>
          </navigator>
        </repeat>
      </van-tab>
    </repeat>
  </van-tabs>
  <view class="weui-loadmore weui-loadmore_line" wx:if="{{ noMoreData }}">
    <view class="weui-loadmore__tips weui-loadmore__tips_in-line">没有更多数据</view>
  </view>
   <!-- 回复按钮 -->
  <navigator url="/pages/topics/create" wx:if="{{ isLogin }}">
    <image src="/images/reply.png" class="create-reply" />
  </navigator>
</view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import Notify from '../components/vant/notify/notify'
  import Topic from '../components/topics/topic'
  import unreadCount from '@/mixins/unreadCount'
  import Event from '@/utils/event.js'

  export default class Index extends wepy.page {
    config = {
      enablePullDownRefresh: true,
      onReachBottomDistance:500
    }
    // 可用于页面模板绑定的数据
    data = {
      parentTitle: 'p-title',
      active: 0,
      scrollTop: 0,
      swipe_threshold:5,
      topic:[],
      categoryId:0,
      noMoreData:false,
       // 话题数据
      topics: [],

      categories:[{'id':0,'name'	:	'全部'}],
      // 当前分页
      page: 1,
      isLogin: false,
      page3: 1,
    }
     components = {
        topic: Topic,
    }
    mixins = [unreadCount]
    onPageScroll(event) {
      // console.log(event)
      this.setData({
        scrollTop: event.scrollTop
      });
    }

    async getCategory(){
      try{
         // 请求话题列表接口
        let categoriseResponse = await api.request('categories')
        // console.log(categoriseResponse)
        let categories = categoriseResponse.data
        // 将数据合并到 this.topics
        this.categories = this.categories.concat(categories)
        wepy.setStorageSync('category',this.categories)
        this.$apply()
      } catch (err) {
          console.log(err)
          Notify('服务器错误，请联系管理员');
      }
    }
     // 获取话题数据
    async getTopics(category=0,page = 1, reset = false) {
      try {
        // 请求话题列表接口
        let topicsResponse = await api.request({
          url: 'topics',
          data: {
            page: page,
            include: 'user,category',
            category_id:category,
          }
        })
        // console.log(topicsResponse)
        let topics = topicsResponse.data.data
        // 将数据合并到 this.topics
        if(this.topics[category]==undefined){
          this.topics[category]=[]
        }
        let topic = this.topics[category]

        this.topics[category] =reset ? topics : topic.concat(topics)
        this.topic = this.topics[category]

        let pagination = topicsResponse.data.meta
        // 根据分页设置是否还有更多数据
        if (pagination.current_page === pagination.last_page) {
          this.noMoreData = true
        }
        this.$apply()
      } catch (err) {
        console.log(err)
         Notify('服务器错误，请联系管理员');
      }
    }
    async onLoad() {
      this.getCategory()
      this.getTopics()
    }
    onShow(){
      this.$parent.checkRefreshPages(this.getCurrentPages().pop().route, () => {
        // this.$invoke('topiclist', 'reload')

        this.noMoreData = false
        this.page = 1
        this.getTopics(this.categoryId,1, true)
        this.$apply()
      })
      let that = this
      Event.EventBus.on('successCreat', function(msg) {
        console.log('更新'+msg);
        that.getTopics(msg)
      });
      this.isLogin = this.$parent.checkLogin()?true:false
      this.$apply()
    }
    async onPullDownRefresh() {
      this.noMoreData = false
      this.page = 1
      await this.getTopics(this.categoryId,1, true)
      wepy.stopPullDownRefresh()
    }
    async onReachBottom () {
      // 如果没有更多内容，直接返回
      if (this.noMoreData) {
        return
      }
      this.page = this.page + 1
      await this.getTopics(this.categoryId,this.page)
      this.$apply()
    }

    onChange(event) {

      if(this.topics[category]==undefined){
        this.topics[category]=[]
      }
      this.noMoreData = false
      this.page = 1
      let category = `${event.detail.index}`
      this.categoryId = category
      let topic = this.topics.filter((topics,index)=>(index == category))
      console.log(topic)
      if(!topic.length){
        console.log(topic.length)
        this.getTopics(category)
      }

      this.topic = topic[0]
      this.$parent.sleep(1)
    }
  }
</script>
