<style lang="less">
.login-page{
  width: 300px;
  height: 400px;
}
.login-wrap {
  margin:12% auto;
  width: 80%;
  height: 80%;
}
.login-cell_warn{
  font-size: 13px;
  color: red
}
.login-cells__title{
  height:40px;
  line-height:40px;
  text-align:center;
}
.login-cells{
  margin:12% 0 15%;
}
.login-agree__text{
  text-align:center;
  font-size:16px;
  color:#a4a4a4;
}
</style>
<template>
  <view class="login-page">
    <van-notify id="van-notify" />
    <van-icon name="arrow-left" size="20px" custom-style="font-size:20px;position:fixed;top:13px;left:10px;border-radius:50%;" @tap="back" />
    <view class="login-wrap">
      <view class="login-cells__title">用户登录</view>
      <!-- <view class="login-cell_warn" wx:if="{{ errorMessage }}">{{ errorMessage }}</view> -->
      <view class="login-cells login-cells_after-title">

        <van-cell-group>
          <van-field
            value="{{ username }}"
            required
            clearable
            placeholder="请输入用户名"
            border="{{ false }}"
            bind:change="bindUsernameInput"
            error="{{error}}"
            left-icon='contact'
          />
          <van-field
            value="{{ password }}"
            type="password"
            required
            placeholder="请输入密码"
            border="{{ false }}"
            bind:change="bindPasswordInput"
            error="{{error}}"
            left-icon='closed-eye'
          />
        </van-cell-group>
      </view>
      <view class="login-btn-area">
        <button class="login-btn" type="primary" @tap="submit">登录</button>
      </view>
    </view>
    <view class="login-agree__text">
      <view @tap='register'>注册新用户</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import api from '@/utils/api'
  import Notify from '../vant/notify/notify';



  export default class Login extends wepy.component {
    data = {
      // 用户名
      username: '',
      // 密码
      password: '',
      // 是否有错
      error: false,
      // 错误信息
      errorMessage: ''
    }
    methods = {
      back(){
        wepy.switchTab({
          url: '/pages/index'
        })
      },
      register (){
        this.$emit('is_register',true)
      },
      // 绑定用户名 input 变化
      bindUsernameInput (e) {
        this.username = e.detail
      },
      // 绑定密码 input 变化
      bindPasswordInput (e) {
        this.password = e.detail
      },

      // 表单提交
      async submit() {
        // 提交时重置错误
        this.error = false
        this.errorMessage = ''

        if (!this.username || !this.password) {
           Notify('请填写账户名和密码');
          // this.errorMessage = '请填写账户名和密码'
          return
        }

        // 获取用户名和密码
        let params = {
          username: this.username,
          password: this.password
        }
        // console.log('登录成功');

        // return false;

        try {
          let authResponse = await api.login(params)
          console.log(authResponse);
          // 请求结果为 401 说明用户名和密码错误，显示错误提示
          if (authResponse.statusCode === 401) {
            this.error = true
            this.errorMessage = authResponse.data.message
            this.$apply()
          }

          // 201 为登录正确，返回上一页
          if (authResponse.statusCode === 200) {
            this.$emit('login-success',{'userInfo':authResponse.data.userInfo})
            Notify({
              text: '授权成功',
              backgroundColor: '#1989fa',
              duration:1000
            });
            // wepy.navigateBack()
          }
        } catch (err) {
          console.log(err)
          Notify('服务器错误，请联系管理员');
          // wepy.showModal({
          //   title: '提示',
          //   content: '服务器错误，请联系管理员'
          // })
        }
      }
    }
   // 页面打开事件
    async onShow() {

    }
  }
</script>
